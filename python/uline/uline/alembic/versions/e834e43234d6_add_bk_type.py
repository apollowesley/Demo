"""Add bk_type

Revision ID: e834e43234d6
Revises: bdfb2e98a635
Create Date: 2017-09-07 14:22:21.667685

"""
from alembic import op
import sqlalchemy as sa
from uline.settings import env
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e834e43234d6'
down_revision = 'bdfb2e98a635'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column('bk_user', sa.Column('bk_type', sa.SmallInteger(), nullable=True))
    op.add_column('dt_inlet_info', sa.Column('bk_id', sa.BigInteger(), nullable=True))
    op.create_foreign_key(u'dt_inlet_info_bk_user_bk_id_fkey', 'dt_inlet_info', 'bk_user', ['bk_id'], ['bk_id'])
    op.add_column('mch_inlet_info', sa.Column('bk_id', sa.BigInteger(), nullable=True))
    op.create_foreign_key(u'mch_inlet_info_bk_user_bk_id_fkey', 'mch_inlet_info', 'bk_user', ['bk_id'], ['bk_id'])

    op.execute("update bk_user set bk_type=1")
    if env in ["SPD_PROD"]:
        op.execute("update mch_inlet_info set bk_id=10000001")
        op.execute("update dt_inlet_info set bk_id=10000001")
    elif env in ["CMBC_PROD"]:
        op.execute("update mch_inlet_info set bk_id=10000000")
        op.execute("update dt_inlet_info set bk_id=10000000")
    elif env in ["DEV"]:
        op.execute("update mch_inlet_info set bk_id=10000001")
        op.execute("update dt_inlet_info set bk_id=10000001")
    elif env in ["LOCAL"]:
        op.execute("update dt_inlet_info set bk_id=10000001")
        op.execute("update mch_inlet_info set bk_id=10000001")

        # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_constraint(u'mch_inlet_info_bk_user_bk_id_fkey', 'mch_inlet_info', type_='foreignkey')
    op.drop_column('mch_inlet_info', 'bk_id')

    op.drop_constraint(u'dt_inlet_info_bk_user_bk_id_fkey', 'dt_inlet_info', type_='foreignkey')

    op.drop_column('dt_inlet_info', 'bk_id')

    op.drop_column('bk_user', 'bk_type')

    # ### end Alembic commands ###
