"""add payment_type and channel

Revision ID: 03e9ac213f13
Revises: 54fed045c733
Create Date: 2016-12-16 08:45:10.215388

"""
from alembic import op
import sqlalchemy as sa

from uline.public.db import initdb
from sqlalchemy.orm import sessionmaker
from uline.model.uline_trade.order import Order
from uline.model.uline.clear import DtClearInfo, MchClearInfo, PClearInfo
from uline.model.uline.balance import DtDailyBalanceInfo, MchDailyBalanceInfo, PDailyBalanceInfo

WX_payment_type_map = {
    'NATIVE': 1,
    'MICROPAY': 2,
    'JSAPI': 3,
}

ALI_payment_type_map = {
    'NATIVE': 7,
    'MICROPAY': 8,
    'JSAPI': 9,
}

initdb()
Session = sessionmaker()

# revision identifiers, used by Alembic.
revision = 'f94d40dfac19'
down_revision = '54fed045c733'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dt_clear_info', sa.Column('payment_type', sa.Integer(), nullable=True))
    op.add_column('mch_clear_info', sa.Column('payment_type', sa.Integer(), nullable=True))
    op.add_column('p_clear_info', sa.Column('payment_type', sa.Integer(), nullable=True))

    op.add_column('dt_daily_balance_info', sa.Column('channel', sa.String(), nullable=True))
    op.add_column('mch_daily_balance_info', sa.Column('channel', sa.String(), nullable=True))
    op.add_column('p_daily_balance_info', sa.Column('channel', sa.String(), nullable=True))

    bind = op.get_bind()
    session = Session(bind=bind)

    print('start')
    for dt_clear in session.query(DtClearInfo).filter_by(payment_type=None):
        order_record = Order.get_by(out_trade_no=dt_clear.out_trade_no).first()
        if order_record.channel == 'weixin':
            dt_clear.payment_type = WX_payment_type_map[order_record.trade_type]
        elif order_record.channel == 'alipay':
            dt_clear.payment_type = ALI_payment_type_map[order_record.trade_type]
        else:
            raise Exception('invalid channel')
    print('success DtClearInfo payment_type')

    for mch_clear in session.query(MchClearInfo).filter_by(payment_type=None):
        order_record = Order.get_by(out_trade_no=mch_clear.out_trade_no).first()
        if order_record.channel == 'weixin':
            mch_clear.payment_type = WX_payment_type_map[order_record.trade_type]
        elif order_record.channel == 'alipay':
            mch_clear.payment_type = ALI_payment_type_map[order_record.trade_type]
        else:
            raise Exception('invalid channel')
    print('success MchClearInfo payment_type')

    for p_clear in session.query(PClearInfo).filter_by(payment_type=None):
        order_record = Order.get_by(out_trade_no=p_clear.out_trade_no).first()
        if order_record.channel == 'weixin':
            p_clear.payment_type = WX_payment_type_map[order_record.trade_type]
        elif order_record.channel == 'alipay':
            p_clear.payment_type = ALI_payment_type_map[order_record.trade_type]
        else:
            raise Exception('invalid channel')
    print('success PClearInfo payment_type')

    for dt_daily in session.query(DtDailyBalanceInfo).filter_by(channel=None):
        channel = session.query(DtClearInfo).filter_by(
            dt_daily_balance_no=dt_daily.dt_daily_balance_no).first()
        # some raw data error
        channel = channel.payment_type if channel is not None else 1
        if channel in (1, 2, 3, 4, 5, 6):
            dt_daily.channel = 'weixin'
        elif channel in (7, 8, 9):
            dt_daily.channel = 'alipay'
        else:
            raise Exception('invalid channel')
    print('success DtDailyBalanceInfo channel')

    for mch_daily in session.query(MchDailyBalanceInfo).filter_by(channel=None):
        channel = session.query(MchClearInfo).filter_by(
            mch_daily_balance_no=mch_daily.mch_daily_balance_no).first()
        channel = channel.payment_type if channel is not None else 1
        if channel in (1, 2, 3, 4, 5, 6):
            mch_daily.channel = 'weixin'
        elif channel in (7, 8, 9):
            mch_daily.channel = 'alipay'
        else:
            raise Exception('invalid channel')
    print('success MchDailyBalanceInfo channel')

    for p_daily in session.query(PDailyBalanceInfo).filter_by(channel=None):
        channel = session.query(PClearInfo).filter_by(
            p_daily_balance_no=p_daily.p_daily_balance_no).first()
        channel = channel.payment_type if channel is not None else 1
        if channel in (1, 2, 3, 4, 5, 6):
            p_daily.channel = 'weixin'
        elif channel in (7, 8, 9):
            p_daily.channel = 'alipay'
        else:
            raise Exception('invalid channel')
    print('success PDailyBalanceInfo channel')

    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('p_daily_balance_info', 'channel')
    op.drop_column('p_clear_info', 'payment_type')
    op.drop_column('mch_daily_balance_info', 'channel')
    op.drop_column('mch_clear_info', 'payment_type')
    op.drop_column('dt_daily_balance_info', 'channel')
    op.drop_column('dt_clear_info', 'payment_type')
    # ### end Alembic commands ###
